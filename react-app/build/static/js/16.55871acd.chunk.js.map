{"version":3,"sources":["../node_modules/@graphiql/react/dist/hint.es2.js","../node_modules/@graphiql/react/dist/forEachState.es.js"],"names":["__defProp","Object","defineProperty","__name","target","value","configurable","hintList","cursor","token","list","hints","filterAndSortList","normalizeText","string","tokenStart","type","test","start","end","from","line","ch","to","text","filterNonEmpty","map","entry","proximity","getProximity","pair","isDeprecated","sort","a","b","length","array","predicate","filtered","filter","toLowerCase","replace","suggestion","lexicalDistance","indexOf","i","j","d","aLength","bLength","cost","Math","min","getVariablesHint","cur","options","state","kind","prevState","step","variableToType","typeInfo","getTypeInfo","keys","name","fields","fieldName","field","description","namedInputType","getNamedType","GraphQLInputObjectType","GraphQLEnumType","getValues","GraphQLBoolean","tokenState","info","forEachState","nullableType","getNullableType","GraphQLList","ofType","objectType","getFields","objectField","CodeMirror","registerHelper","editor","getCursor","getTokenAt","results","Pos","signal","stack","fn","reverseStateStack","push"],"mappings":"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","file":"static/js/16.55871acd.chunk.js","sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport { getNamedType, GraphQLInputObjectType, GraphQLEnumType, GraphQLBoolean, getNullableType, GraphQLList } from \"graphql\";\nimport { f as forEachState } from \"./forEachState.es.js\";\nimport \"./index.es.js\";\nimport \"react\";\nimport \"react-dom\";\nfunction hintList(cursor, token, list) {\n  const hints = filterAndSortList(list, normalizeText(token.string));\n  if (!hints) {\n    return;\n  }\n  const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0]) ? token.start : token.end;\n  return {\n    list: hints,\n    from: { line: cursor.line, ch: tokenStart },\n    to: { line: cursor.line, ch: token.end }\n  };\n}\n__name(hintList, \"hintList\");\nfunction filterAndSortList(list, text) {\n  if (!text) {\n    return filterNonEmpty(list, (entry) => !entry.isDeprecated);\n  }\n  const byProximity = list.map((entry) => ({\n    proximity: getProximity(normalizeText(entry.text), text),\n    entry\n  }));\n  const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, (pair) => pair.proximity <= 2), (pair) => !pair.entry.isDeprecated);\n  const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) || a.proximity - b.proximity || a.entry.text.length - b.entry.text.length);\n  return sortedMatches.map((pair) => pair.entry);\n}\n__name(filterAndSortList, \"filterAndSortList\");\nfunction filterNonEmpty(array, predicate) {\n  const filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n__name(filterNonEmpty, \"filterNonEmpty\");\nfunction normalizeText(text) {\n  return text.toLowerCase().replace(/\\W/g, \"\");\n}\n__name(normalizeText, \"normalizeText\");\nfunction getProximity(suggestion, text) {\n  let proximity = lexicalDistance(text, suggestion);\n  if (suggestion.length > text.length) {\n    proximity -= suggestion.length - text.length - 1;\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n  return proximity;\n}\n__name(getProximity, \"getProximity\");\nfunction lexicalDistance(a, b) {\n  let i;\n  let j;\n  const d = [];\n  const aLength = a.length;\n  const bLength = b.length;\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n      d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n  return d[aLength][bLength];\n}\n__name(lexicalDistance, \"lexicalDistance\");\nCodeMirror.registerHelper(\"hint\", \"graphql-variables\", (editor, options) => {\n  const cur = editor.getCursor();\n  const token = editor.getTokenAt(cur);\n  const results = getVariablesHint(cur, token, options);\n  if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n    results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n    results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n    CodeMirror.signal(editor, \"hasCompletion\", editor, results, token);\n  }\n  return results;\n});\nfunction getVariablesHint(cur, token, options) {\n  const state = token.state.kind === \"Invalid\" ? token.state.prevState : token.state;\n  const kind = state.kind;\n  const step = state.step;\n  if (kind === \"Document\" && step === 0) {\n    return hintList(cur, token, [{ text: \"{\" }]);\n  }\n  const variableToType = options.variableToType;\n  if (!variableToType) {\n    return;\n  }\n  const typeInfo = getTypeInfo(variableToType, token.state);\n  if (kind === \"Document\" || kind === \"Variable\" && step === 0) {\n    const variableNames = Object.keys(variableToType);\n    return hintList(cur, token, variableNames.map((name) => ({\n      text: `\"${name}\": `,\n      type: variableToType[name]\n    })));\n  }\n  if (kind === \"ObjectValue\" || kind === \"ObjectField\" && step === 0) {\n    if (typeInfo.fields) {\n      const inputFields = Object.keys(typeInfo.fields).map((fieldName) => typeInfo.fields[fieldName]);\n      return hintList(cur, token, inputFields.map((field) => ({\n        text: `\"${field.name}\": `,\n        type: field.type,\n        description: field.description\n      })));\n    }\n  }\n  if (kind === \"StringValue\" || kind === \"NumberValue\" || kind === \"BooleanValue\" || kind === \"NullValue\" || kind === \"ListValue\" && step === 1 || kind === \"ObjectField\" && step === 2 || kind === \"Variable\" && step === 2) {\n    const namedInputType = typeInfo.type ? getNamedType(typeInfo.type) : void 0;\n    if (namedInputType instanceof GraphQLInputObjectType) {\n      return hintList(cur, token, [{ text: \"{\" }]);\n    } else if (namedInputType instanceof GraphQLEnumType) {\n      const values = namedInputType.getValues();\n      return hintList(cur, token, values.map((value) => ({\n        text: `\"${value.name}\"`,\n        type: namedInputType,\n        description: value.description\n      })));\n    } else if (namedInputType === GraphQLBoolean) {\n      return hintList(cur, token, [\n        { text: \"true\", type: GraphQLBoolean, description: \"Not false.\" },\n        { text: \"false\", type: GraphQLBoolean, description: \"Not true.\" }\n      ]);\n    }\n  }\n}\n__name(getVariablesHint, \"getVariablesHint\");\nfunction getTypeInfo(variableToType, tokenState) {\n  const info = {\n    type: null,\n    fields: null\n  };\n  forEachState(tokenState, (state) => {\n    if (state.kind === \"Variable\") {\n      info.type = variableToType[state.name];\n    } else if (state.kind === \"ListValue\") {\n      const nullableType = info.type ? getNullableType(info.type) : void 0;\n      info.type = nullableType instanceof GraphQLList ? nullableType.ofType : null;\n    } else if (state.kind === \"ObjectValue\") {\n      const objectType = info.type ? getNamedType(info.type) : void 0;\n      info.fields = objectType instanceof GraphQLInputObjectType ? objectType.getFields() : null;\n    } else if (state.kind === \"ObjectField\") {\n      const objectField = state.name && info.fields ? info.fields[state.name] : null;\n      info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n    }\n  });\n  return info;\n}\n__name(getTypeInfo, \"getTypeInfo\");\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nfunction forEachState(stack, fn) {\n  const reverseStateStack = [];\n  let state = stack;\n  while (state === null || state === void 0 ? void 0 : state.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n__name(forEachState, \"forEachState\");\nexport { forEachState as f };\n"],"sourceRoot":""}